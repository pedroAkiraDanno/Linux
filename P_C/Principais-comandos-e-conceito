Principais-comandos-e-conceito


-----------------------------------------------------------------------------------------------------------------------------------------------
LPI - Exame 101-500 - topico 103: Comandos GNU e UNIX

comandos: 


$echo $SHELL 
desc: mostra o shell utilizado 
saida: /bin/bash



$type echo 
desc: mostra se o comando é parte do shell ou nao 
saida: echo is a shell builtin
 


$echo PATH 
desc: executar e consultar os programas externos do linux.  
      Local onde o bash, vai buscar o binario, e comandos
saida: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin



$cd 
desc: mudar de diretorio, change diretory 
saida:



$./
desc: neste diretorio
saida:


$/home/jarvis/Exercicios
desc: caminho absoluto 
saida:


$./Script_Exemplo.sh
desc: caminho relativo
saida:


$VAR=linux
desc: declarar uma variavel de ambiente localmente, so visivel nesssa são do shell, *sem espaço, 
saida:



$echo $VAR
desc: exibe o valor da variavel 
saida: linux 



$export VAR ou $export VARIAVEL=valor 
*agora todos os shells enxergam a variavel,  esta global



*o shell/terminal é um processo, quando executa um programa .sh ele é executado 
depois volta o shell normal, o .sh é filho do processo shell 



$bash
desc: executa/abre um novo bash, um novo processo 
saida:



$set | less 
desc: mostra variaveis locais e exportadas, no bash 
saida: 



$env | less
desc: mostra apenas variaveis globais, comando externo type env, so enxerga as vars exportadas 
saida: 



$env TESTE=windowns ./script_var 
desc: so executa o valor windons na executação do comando



$unset TESTE
desc: remover uma variavel 
saida: 



Principais Variáveis de Ambiente/variaveis pre-definidas
HISTFILE- onde esta o arquivo de historico, para que possa consultar depois, saida: /home/jarvis/.bash_history
HISTFILESIZE=quantidade maxima, tamanho
HISTSIZE= tamanho do arquivo 
HOME- o home do usuario local, em uso, o valor muda conforme sesao e usuario logado
HOSTNAME-linux 
LOGNAME- usuario que fez login nessa sessao 
PWD-qual diretorio local, qual o diretorio que esta agora 
OLDPWD: Diretório anterior
SHELL-o shell que esta usando 
TERM- o terminal que esta usando xterm - tty
USER- nome do usuario, igual ao LOGNAME 
PATH: Diretórios em que o Linux irá procurar por arquivos executáveis



Variaveis definidas dinamicamente pelo shell
desc: sao identificadas com um $ no começo 


$echo $$
desc: mostra o pid do processo atual, no caso no shell
saida:



$echo $!
desc: mostra o pid do ultimo processo em backgrous
saida: 



echo $?
desc: mostra o ultimo comando, executado com sucesso retorna 0, erro - diferente de 0, pode ser 1 ou 2 
saida:


$echo ~
desc: mostra o home do usuario 
saida: /home/jarvis



$echo ~jarvis
desc: mostra o home do usuario tambem 
saida:



$clear ; date ; ls 
desc: Comandos Sequenciais, executa em sequencia nao importa se o comando anterior foi com sucesso ou nao 
saida:



$ls -lath && echo Linux
desc: se o primerio foi executado com sucesso, ele executa o segundo tambem 
saida:


$ls -lath || echo Linux
desc: So executa o segundo comando se o primeiro nao funcionou. se o primeiro executar ele executa so o primeiro.
saida:



$cat .bash_history
desc: arquivo .bash_history. mostra os ultimos comandos. Cada usuario em um arquivo proprio de history. Esse arquivo é gravado toda vez que é fechado a sessao 
saida: 

$!!
desc: Repete o ultimo comando que realizou 
saida:


$!10
desc: !numero. Executa o numero da linha que esta o comando do history 
saida: 



$!uname 
desc: executa o ultimo comando com essa string 
saida: 



$history -c 
desc: limpa o arquivo do history 
saida:



$set | grep HISTFILE
desc: mostra o arquivo de history e tamanho
saida: 



$ctrl r 
desc: busca um comando no seu history 
saida:



$shift 
desc: recurso de autocompletar 
saida: 



$tab duas vezes 
desc: mostra os comando com o começo daquela letra 
saida: 


$history | grep shut*
desc: busca comando no history
saida:



$man ls 
desc: todos comandos tem o manual de referencia e ajuda. acessado pelo man. Man nome do comando ou arquivo de configuração 
	  manual de referencia. 
	  *para comandos externos.
	  comandos inteiros nao tem o manual 
saida: 



$man bash 
desc: *comandos inteiros. tem que consultar o manual do bash. referenicas para comandos inernos 
saida: 


$type cd - interno . type cp - externo type cd - interno, faz parte do bash 
desc: comando para ver qual comando faz parte do bash ou n. interno = bash, externo = nao bash 
saida:



$info ls 
desc: info
saida: 
 



$man -k "system information"
desc: tras uma referencia dos comandos que tenham system information. Ele tem uma pequena base de dados de referencias 
saida: 



$whatis ls
desc: consultar man -k, o que é esse comando. whatis tar. descrição do comando 
saida: 



$aproposo "updade system"
desc: faz a busca de acordo com a descricao, te retorna os comandos possiveis. igual o man -k
saida: 



$uname
desc: retorna o nome do SO. Linux
saida: Linux



$uname -a
desc: print system information. impreme informacoes do sistema. mostra todos 
saida: Linux srv02-Xubuntu 5.0.0-38-generic #41-Ubuntu SMP Tue Dec 3 00:27:35 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux



$uname -r
desc: versao do kernel
saida: 



$alias
desc: mostra os alias  
saida: alias l='ls -CF' alias la='ls -A' alias ll='ls -alF' alias ls='ls --color=auto'



$alias home='cd /home/jarvis/"Área de Trabalho"'
desc: criar um alais. Temporario
saida:


$vim .bashrc
desc: alias permanente
	  #alias author:PedroAkira to file:github_locations.txt
      alias github='cat -n Desktop/Pedro/github_locations.txt'
saida:


      
$which echo 
desc: procurar algum arquivo, que estao incluidos no $PATH, 
	  ferramenta de busca. Localiza um comando. onde esta o comando echo, localizar qualquer arquivo que esteja no cominho $PATH 
saida: /bin/echo




#quoting
$ echo "$TESTE" ; echo '$TESTE' ; echo "pedro           akira" ; echo pedro    akira
desc: 	no bash tem uma serie de caracteres especiais
		echo $
		proteger e impedir de interpretar as variáveis 
		echo *
		* -> todos. significa todos os diretórios onde esta, local
		echo "*" -> impede a interpretação do * -> ele imprime o *
		echo '*'-> protege e impede a interpretação dos caracteres especiais 
		echo \* -> protege apenas o caractere seguinte, só um caráter 
		diferença entre aspas "" e '' 
		"" -> protege todos os caracteres especiais exceto os: $  ` /
		'' -> protege todos os caracteres 
		declarando a variáveis 
		TESTE=curso
		echo $TESTE
		echo "$TESTE"
saida:





#filtros_em_textos_e_arquivos_exibir_conteudo_arquivo

$cat arquivo.txt 
desc: le um arquivo de texto 
saida:



$cat -n 
desc: mostra todas as linhas inumeradas
saida:



$cat -b 
desc: inumera apenas as linhas nao brancas
saida:



$cat -s
desc: inumera, quando tem mais de uma linha em branco, trasforma em apenas uma linha em branco 
saida:



$cat -A 
desc: mostra caracteres especias 
saida: Ana$


$cat --help 
desc: opcoes do comando car
saida:


$man cat 
desc: mais detalhes sobre o comando cat
saida: 



$tac teste.txt
desc: o inverso de cat, imprime a ultima linha para a primeira 
saida:



$head arquivolongo.txt
desc: mostra o cabeçalho do arquivo 
	  as primeiras linhas
      por padrao alguns linux mostrar as 10 primeiras linhas
      outros linux podem mostras as 5 primeiras linhas,
      #10 primeiras linhas
saida:



$head -n2 arquivolongo.txt
desc: mostra as 2 primeiras linhas ou head -2 arquivolongo.txt
      pode omitir o -n, head 2 arquivo.txt
saida:



$head -c50 arquivolongo.txt
desc: mostra os primeiros 50 bytes 
saida:



$tail arquivo.txt
desc: mostra as ultimas 10 linhas ou 5 linhas dependendo do linux
saida:



$tail -n10 arquivolongo.txt
desc: mostras as 5 ultimas linhas, pode omitir o -n, head 2 arquivo.txt
saida:



$tail -f arquivolongo.txt
desc: esperando alguma saida
      se algo por escrito nesse arquivo ele vai mostrar
      #bom pra ver log
      tail -n5 -f arquivo.txt 
saida:      



$echo "pedro" >> alunos.txt
desc: redirecionamento 
      joga a saida do echo para o final do arquivo 
saida:



$less arquivo.txt
desc: less - é o melhoramento do more
	  comando para fazer a paginação
      tem mais opcoes:
      /palavra 
      procura a palavra 
      n de novo, n de next 
      N busca para tras 
     crtl g, mostra info dos arquivos e linh
     cat arquivo | less, com o | pega a saida do primeiro comando e joga como entrada para o segundo comando 
saida:     



$ cat arquivo.txt | less
desc: com o pipe | pega a saida do primeiro comando e joga como entrada para o segundo comando 
saida:



$wc alunos.txt
desc: mostra a quantidades de linhas, palavras e bytes
saida:  14  25 191 alunos.txt



$wc -l alunos.txt
desc: mostra apenas as linhas
saida:



$wc -w alunos.txt
desc: palavras, w de word
saida:


$wc -c quantidade de caracteres 
desc: -c ou --bytes quandidade de bystes 
      -m ou --chars quantidade de caracteres
saida:      



$wc * 
desc: roda o comando para todos os arquivos do diretorio atual 
saida: 



$cat alunos | wc -l 
desc: 
saida: 



$tail -n10 alunos.txt | wc
desc: 
saida: 




$nl alunoas.txt
desc: igual o comando cat -b, exibe as linhas enumetadas sem enumetar as linhas em branco
saida:  1	Andre Gonçalves
        2	Paulo Freitas
        3	Maria Antonieto Sousa



$sort alunos.txt
desc: ordena o arquivo em ordem albatica 
      colocando as linhas em branco no comeco 
saida:


$sort -r alunox.txt
desc: ordena em ordem reversa 
saida:



$sort -k2 alunox.txt
desc: ordena apartir do segundo campo 
saida:



$cat alunox.txt Z sort -r         
desc: 
saida:



$uniq alunos.txt
desc: mostrar entradas unicas no arquivo
      mostra apenas uma vez 
      ana e ana, mostra ana uma unica vez 
      porem tem que estar uma palavra em baixo da outra, para resolver isso pode usar o sort 
      que ordena e tira as linhas em branco 
      sort alunos.txt | uniq 
saida:      



$uniq -d alunos.txt 
desc: mostra apenas as linhas duplicatas 
saida:



$sort alunox.txt | uniq -c 
desc: enumera a quantidade de ocorrencia das palavras repetidas 
saida:



$od alunos.txt
desc: exibe o texto em formato octal, octal dump
saida:

$od -tx alunox.txt
desc: mostra em hexa
saida:



$od --help 
desc: mostra em varios opcoes 
saida:



$join codidoalunos.txt notas-alunos.txt
desc: join 
	  juntao de arquivos de texot atraves de um indece 
	  cat codigo alunos.txt
	  cat notas-aluno.txt
	  join codidoalunos.txt notas-alunos.txt
	  join -j2 codigo-alunos.txt notas-aluno.txt
	  comando bem limitado 
saida:	  


$paste codidoalunos.txt notas-alunos.txt
desc: linha de um arquivo com outro arquivo, ele nao usa indice
	  linha 1 com linha 1, linha 2 com linha 2 juntando os dois arquivos 
saida: 




$split -l20 arquivolongo.txt
desc: split 
	  divide um arquivo em diverosos arquivos
  	  split -l20 arquivolongo.txt
	  -l20, a cada 20 linhas cria um arquiv
	  dividiu o arquivo por linhas 



$split -l20 arquivolongo.txt novo_arquivo_
desc: nome do arquivo que ele vai criar 
saida: 



$split -b100 arquivo.txt novo_arquivo_
desc: cada arquivo com 100bytes 
saida:




$cat alunox.txt | tar a-z A-Z
desc: tr
	  substituir ou deletar algum linha
	  ele funciona apenas com | pipe ou redirecionamento 
	  cat alunox.txt | tar a-z A-Z
	  de minusculo para maiusculo
saida: 	  



$cat alunos.txt | tr A E
desc: tudo que era A vira E  
saida:



$cat alunos.txt | tr tr ei EI
desc: nao precisa ter ei junto, ele olha cada um dos caracteres
saida: 



$cat alunos.txt | tr [:upper:] [:lower:]
desc: todo q estava em maiusculo em minusculo , tr --help
saida: 



$cat alunos.txt | tr ' ' _
desc: toda vez que tiver um espaco vazio ele vai trocar por _
saida: 



$cat alunos.txt | tr -d A
desc: deletar todos as linhas A 
saida: 



cat alunos.txt | tr -d ' '
desc: deletar os espacos 
saida: 



$cut -c1-5 aluno.txt
desc: cut recortar text 
	  -c caracter 
	  retirar o caracter 1 ao 5 
	  cut -c5-10
saida: 



$cut -c1,2,5 alunos.txt
desc: retorna o caracter 1,2 e 5 
saida:



$cut -c-5 alunos.txt
desc: exibe do caracter 1 ate o 5 apenas
saida:



$cut -c5- alunos.txt
desc: exibe do caracter 5 para frente 
saida:



$cut -d" " -f1 alunos.txt
desc: cada palavra é um campo, pode ser espaco ; 
	  -d delimitador
	  cut -d" " -f1 alunos.txt
	  cut -d" " -f1-3 alunos.txt
	  -f campo = palavra
saida:








$sed 
desc: ferramenta poderosa
	  usado normalmente em conjunto com empressoes regulares
	  sed
      procurar um conteudo e subistitui e deletar 
saida:





$sed 's/Silva/Sousa' alunos.txt
desc: o comando vai estar em ''
      s/ subistituir 
      *so subistitui uma ocorencia por linha 
saida:      



$sed 's/Silva/Sousa/g' alunos.txt
desc: /g substituir mais de uma ocorrencia por linha  da palavra encontrada 
saida: 



$sed '3,5 d' alunos.txt
desc: apagar da linha 3 ate a 5 
saida: 



$sed '/Claudia/d' aluno.txt
desc: apagar claudia 
      / procurar
saida:       



$tar -s
desc: tira partes repeditas de uma string
      echo "curso de liiiiiinux" | tr -s i
saida:



$echo "curso    de linux " | tr -s  ""
desc: tira espaco 
saida: 



#como visualizar conteudo de um arquivo compactado

$xzcat arquivolongo.txt.xz
desc: conteudo do arquivo compactado se fizer o cat nao da para ver 
      ler sem ter q descompactar 
      logs sao compactados 
      nao precisa descompactar para ler o conteudo 
      tem comandos especifica para cada algorimo 
saida:



$xzcat arquivolongo.txt.xz
desc: para ler arquivos compactados xz
saida:



$bzcat arquivolongo.txt.xz
desc: para ler arquivos compactados xz
saida:



$zcat arquivolongo.txt.xz
desc: para ler aquivo zip       
saida:



#gerar e checar checksuns

desc: que sao hashs 
      ls lh xubuntu-18.04-desktop-amd64.iso
      iso do xubuntu 
      pode pegar esse arquivo e gerar um arquivo q represente 
      todo o conteudo dessa iso 
      gera uma sequencia de caracteres que sempre vai gerar esses caracterers

      algoritmos:
      md5sum - mais antigo
      sha256sum - 
      sha512sum - melhorados, com certeza vai asegurar q gera um arquivo unico
      sha1sum - mais antigo
      *todos eles geram um arquivo hash do arquivo q passar



$sha256sum xubuntu-18.04-destip-amd64.iso 
desc: se algum byte for perdido na trasmissao ou alterado 
      a sequencia de caracteres vai ser alterada 
      download n foi corrombido ou hackeado 
      gero um hash na origem e checo se é o mesmo no destino 
saida: 4a794acd6f685827897684b135eaa7a5b80473a5b97ab6879a225463b7950004  test.txt



$sha512sum xubuntu-18.04-destip-amd64.iso
desc: quantidade de bits q ele gera
      256-bits
      512-bits - ainda mais seguranca 
      usa mto se faz downloads de isos, ou arquivos grandes 
      site da isos 
      tem um arquivo chamado SHA256SUMS
      onde contem todos os chekssuns dos arquios isos
saida: 



$sha256sum -c SHA256SUMS
desc: ele olha os arquivos e ve se esta OK, com o arquivo SHA256SUMS onde contem o conteudo do algoritmo sha256sum nomearquivo
      ele olha os arquivo do diretorio e ve se bate com o arquivo gerado SHA256SUMS
saida: test.txt: SUCESSO



#Gerenciador basico de arquivos 



$ estrutura de diretorios do linux
  comeca sermpre pelo /, raiz root 
  hierarquia 
  /root -> o home do usuario root 
  caminho absoluto 
  caminho relativo sem o / no comeco 



$cd
desc: cd -> change diretor, mudar de diretorio 
      cd .. voltar um diretorio 
      cd nomearquivo
      cd - voltar para o diretorio anteriomente, antes de me mudar 
      cd ~ home do usuario no momento, usuario local 
      cd ../..
saida:



$ls -> listar o conteudo/arquivos do diretorio 
desc: ls 
      ls -a arquivos ocultos, arquivos q comecam com .
      ls -l -> lista detalhada dos arquivos 
      ls -a - mostra o . e o .. , o . é o diretorio atual, e o .. diretorio anterior e todos os diretorios atuais sem detalhe 
      referenciar o diretorio atual . 
      cada campo no ls:
      primeiro conjunto de letras (determina a permissao e tipo de arquivo) d diretorio, quando n tem nada é um arquivo, l link
      segundo numero, quantos raid links sao apotandos para o arquivo 
      usuario , grupo
      tamanho do aruqivo em bytes 
      data e hora da ultima alteração 
      nome do arquivo 
saida:      



$ls -lh
desc: h human mostra o tamanho do arquivo em kili,mega,giga
saida:



$ls -lR
desc: recursivo, entra em cada diretorio e viu o que tinha da dentro 
saida: 


$ conjuntos de caracteres especias: usado no ls,cp,mv
desc: * -> mostra tudo 
      ls -lath AULA1*, todos q tem aula AULA1 e tudo depois disso 
      ? -> uma letra qualquer depois 
      ls -l AULA1? depois so uma aula
      ls -l AULA?0 qualquer ? e depois 0
      lista de caracteres q aparecam 
      ls -l AULA[123] uma lista, um caracter por vez 
      lista de caracteres q n aparesam 
      ! -> para negar 
      ls -l AULA[!123]
      listas com range 
      ls -l AULA[1-5]
      1 ao 5 
      ou negar 
      ls -l AULA[!1-5]
      ls -l AULA[1-5]?
      a 1 ao 5 e que tenha um caracter depois 
      sequencia de strings q quero usando a chaves
      ls -l aula{10,20,30}
      ls -l A{ula,ULA}
saida:



$file nomedoaruqivo
desc: no linux nao costuma mto utilizar a extensao do arquivo 
      file nomedoaruqivo
      analisa o arquivo 
      e fala que tipo é o arquivo e explica a extensao do arquivo
saida:



$cp -opcoes origem destino
desc: cp alunos.txt /tmp
saida:



$cp -v aluno* /tmp
desc: comando -v verbose detalhes, 
      muitos comandos no linux tem o -v, mostra os detalhes
      o passo a passo da operacao 
saida:



$cp -v aluno* /tmp
desc: comando -v verbose detalhes, 
      muitos comandos no linux tem o -v, mostra os detalhes
      o passo a passo da operacao 
saida:



$cp -i alunos* /tmp
desc: pergunta se um arquivo pode ser sobreescrito, mto bom 
saida: 



$cp nao copia diretorio 
desc: para copiar diretorio usar o -r
      cp -r diretorio /tmp 
      -r copia recursivamente, copia o diretorio e o todo o conteudo dele 
      cp -rv exercicios /tmp
      quando copia um arquivo ele muda as atualizacoes de modificacao 
      e usuario que copiou vira o usuario do arquivo 
saida:



$cp -p exercicio /tmp
desc: prezervar as caracristicas do arquivo
      mandei a data de modificaçao usuario e grupo
saida:



$renomear um arquivo
desc: copiado aula1 para um outro arquivo chamado aula2
      cp aula1 aula2      
saida:




$mv mesmas opcoes do cp 
desc: renomear um arquivo 
      mv
      mv remove o arquivo com nome antigo e coloca o novo nome
      mv aula1 aula2 
      movendo de um nome para o outro 
      remonomear um arquivo, melhor usar o mv 
saida:




$touch 
desc: criar um arquivo 
      ou 
      com o touch consegue mudar a ultima data de alteracao ou acesso 
      touch nome-arquivo-ja-existente
      atualiza a data de ultima modificacao
      touch -a nome-arquivo
      altera a data da ultimo acesso 
      touch -m nome-arquivo date da ultimo modificaao 
      touch -t anomesdiahora nomearquivo
      touch -t 201803121535
      todo arquivo no linux 
      tem a data de modificacao/alteracao e a data do ultimo acesso
      ls -l 
      mostra a data da ultima alteracao 
saida: 




$rm aula 10 
desc: perguntar antes de apagar 
      rm -i aula10
      rm -v aula
      -verbose 
      detalhe de cada remocao 
      remover diretorio 
      rm -r
      -r recursivo 
      rm -r diretorio 
      rmdir diretorio 
      so pode ser removido em diretorios vazios 
saida:




$mkdir linux
desc: criar um diretorio 
      mkdir linux/teste - da para criar pq so sao 2
      mkdir curso/LPI/VERSAO da erro pq ele nao conseguie criar subdiretorios 
      mkdir -p curso/LPI/VERSAO 
      ou 
      mkdir --parents curso/LPI/VERSAO 
      -p podecriar subdiretorios 
saida:



$rmdir Linux
desc: rmdir -p Linux/Ubuntu
      remove essa estrutura se todos tiverem vazios
      remove a arvore, o caminho da arvore
saida:      



$find 
desc: procurar arquivos e diretorios 
      find onde-quer-procurar que-tipo-de-entrada-vai-dar aula
      find /home -name Aula10
      find /home -name aula*
      find /home -user jarvis -name aula10
      find ./ -ctime -1
      todos os arquivos que foram executados um dia antes
      ./ no meu diretorio atual para frente, todos os arquivos apartir do 
      meu diretorio 
      -1 um dia anterior
saida:      










-----------------------------------------------------------------------------------------------------------------------------------------------







